Exercise 1-1: What are some factors that would help a development organization move from Beizer’s testing
level 2 (testing is to show errors) to testing level 4 (a mental discipline that increases quality)?
Answer:
 
1. Plan the testing and QA processes
2. Employ test-oriented software development management
3. Use a shift-left approach to start testing early and often
4. Conduct formal technical reviews
5. Ensure suitable work environment for QA team
6. Implement user acceptance testing
7. Optimize the use of automated tests
8. Implement exploratory and ad hoc testing
9. Employ code quality measurements
10. Report bugs effectively
11. Get the most out of your test management tool


Exercise 1-3: What do we mean by “level 3 thinking is that the purpose of testing is to reduce risk? ” What
risk? Can we reduce the risk to zero?
Answer:

Risk is the possibility of a negative or undesirable outcome.

What Risk?

Scheduling Risk: Testing projects are not efficiently or completely scheduled to meet the deployment deadline. Inefficiency in scheduling can include:
Inaccurate time estimates
Improper assessment of required tool resources
Improper assessment of required manpower resources
Unanticipated expansion(s) in project scope
Inaccurate identification of complexities, functionalities, or operations

Budget Risk: Required investment is inaccurately anticipated, including:
Inaccurate Cost Estimation: Certain required items excluded from the estimation of costs
Cost Overruns: Unanticipated expenses, or inaccurate estimation, have cause unanticipated expenses
Expansion of the project scope: The project scope is expanded to include initially unanticipated expenses.

Operational Risk: Ineffective processing, system failures, or unanticipated circumstances define operational risk. Causes include:
Failure to establish testing priorities
Conflicting test priorities
Insufficient resources
Improper training
Improper communication among team members
Improper communication with enterprise stakeholders

Technical Risk: Technical risks often lead to functionality and performance failures. Some causes include:
Continually changing requirements
Lack of technical resources
Product complexities

General Risk:
Changes in market strategies
Changes in government regulations
Changes in customer demands and interests
